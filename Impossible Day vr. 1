SET job.priority 'NORMAL';
SET pig.encrypt.keyResolver 'org.apache.pig.crypto.shims.MappingKeyResolver';
SET pig.encrypt.key.mapping.file 'file:////opt/key/all/allkeymappingload.xml';
SET pig.ignoreBadFiles.force true;

Clms = LOAD '/refined/subsets/t1/not_restricted/{TFTMA,TMHMA}/2014/' USING PigStorage('\\u1') AS
(tp_payer_key: int
,tp_tx_key: chararray
,ts_tx_stream_key: chararray
,ts_tx_seq: chararray
,ts_tx_type_code: chararray
,ts_product_type: chararray
,ts_received_date: chararray
,c_claim_id: chararray
,l_line_seq: chararray
,m_sub_id: chararray
,member_key: chararray
,dep_id: chararray
,c_dob: chararray
,c_gender_id: chararray
,member_dob_not_used: chararray
,member_gender_not_used: chararray
,cub_bill_type: chararray
,cond_code_1: chararray
,cond_code_2: chararray
,cond_code_3: chararray
,cond_code_4: chararray
,cond_code_5: chararray
,cond_code_6: chararray
,cond_code_7: chararray
,cond_code_8: chararray
,cond_code_9: chararray
,cond_code_10: chararray
,cond_code_11: chararray
,cond_code_12: chararray
,cond_code_13: chararray
,cond_code_14: chararray
,cond_code_15: chararray
,cond_code_16: chararray
,cond_code_17: chararray
,cond_code_18: chararray
,cond_code_19: chararray
,cond_code_20: chararray
,cond_code_21: chararray
,cond_code_22: chararray
,cond_code_23: chararray
,cond_code_24: chararray
,claim_diag_1: chararray
,claim_diag_2: chararray
,claim_diag_3: chararray
,claim_diag_4: chararray
,claim_diag_5: chararray
,claim_diag_6: chararray
,claim_diag_7: chararray
,claim_diag_8: chararray
,claim_diag_9: chararray
,claim_diag_10: chararray
,claim_diag_11: chararray
,claim_diag_12: chararray
,claim_diag_13: chararray
,claim_diag_14: chararray
,claim_diag_15: chararray
,claim_diag_16: chararray
,claim_diag_17: chararray
,claim_diag_18: chararray
,claim_diag_19: chararray
,claim_diag_20: chararray
,claim_diag_21: chararray
,claim_diag_22: chararray
,claim_diag_23: chararray
,claim_diag_24: chararray
,claim_diag_25: chararray
,admit_diag: chararray
,line_diag_1: chararray
,line_diag_2: chararray
,line_diag_3: chararray
,line_diag_4: chararray
,p_provider_id: chararray
,provider_key: chararray
,subspec_id: chararray
,t_taxgroup_id: chararray
,taxgroup_key: chararray
,l_dos_from: chararray
,l_dos_to: chararray
,pos_id: chararray
,l_insurance_key: chararray
,l_insurance_id: chararray
,sub_rev_code: chararray
,sub_cpt: chararray
,sub_mod1: chararray
,sub_mod2: chararray
,sub_mod3: chararray
,sub_mod4: chararray
,l_sub_units: double
,l_sub_amount: double
,rev_code: chararray
,cpt: chararray
,mod1: chararray
,mod2: chararray
,mod3: chararray
,mod4: chararray
,l_units: double
,l_amount: double
,l_copay: double
,l_coinsurance: double
,l_deductible: double
,l_cob: double
,l_other_reduction: double
,l_paid: double
,l_paid_date: chararray
,l_bypass_code: chararray
,l_claim_type: chararray
,l_par_yn: chararray
,l_line_key: long
,c_claim_key: long
,c_claim_master_key: long
,subspec_code: chararray
,ssl_spec_code: chararray
,pos: chararray
,rr_rec_cpt: chararray
,rr_rec_mod1: chararray
,rr_rec_mod2: chararray
,rr_rec_mod3: chararray
,rr_rec_mod4: chararray
,rr_rec_units: double
,rr_rec_pct: double
,c_claim_id_orig: chararray
,l_line_seq_orig: chararray
,c_cdf_text_1: chararray
,c_cdf_text_2: chararray
,c_cdf_text_3: chararray
,l_cdf_text_1: chararray
,l_cdf_text_2: chararray
,l_cdf_text_3: chararray
,l_provider_zip: chararray
,l_provider_plus_4: chararray
,l_tos: chararray
,rt_rec_tx_line_key: chararray
,tp_payer_short: chararray
,cub_drg: chararray
,ts_stream_key: chararray
,c_group_id: chararray
,c_partner_id: chararray
,cub_dos_from: chararray
,cub_dos_to: chararray
,cub_admit_date: chararray
,cub_admit_hour: chararray
,cub_admit_minute: chararray
,cub_admit_type: chararray
,cub_discharge_date: chararray
,cub_discharge_hour: chararray
,cub_discharge_minute: chararray
,cub_discharge_status: chararray
,cub_sub_drg: chararray
,cub_sub_severity: chararray
,cub_severity: chararray
,cub_sub_noncovered_amount: double
,cub_claim_billed_amount: double
,cub_claim_noncovered_amount: double
,cub_claim_allowed_amount: double
,cub_claim_paid_amount: double
,cub_assignment_of_benefits: chararray
,cub_prior_payments: double
,cub_npi_attending: chararray
,cub_date_adjudicated: chararray
,cub_date_received_client: chararray
,cub_claim_type: chararray
,cub_par_yn: chararray
,cub_npi: chararray
,cub_paid_date: chararray
,cub_product_state: chararray
,cub_grouper_id: chararray
,cub_grouper_key: chararray
,cub_claim_denial_rsn_cd: chararray
,cub_alc_days: int
,cub_birth_weight: double
,claim_diag_poa_1: chararray
,claim_diag_poa_2: chararray
,claim_diag_poa_3: chararray
,claim_diag_poa_4: chararray
,claim_diag_poa_5: chararray
,claim_diag_poa_6: chararray
,claim_diag_poa_7: chararray
,claim_diag_poa_8: chararray
,claim_diag_poa_9: chararray
,claim_diag_poa_10: chararray
,claim_diag_poa_11: chararray
,claim_diag_poa_12: chararray
,claim_diag_poa_13: chararray
,claim_diag_poa_14: chararray
,claim_diag_poa_15: chararray
,claim_diag_poa_16: chararray
,claim_diag_poa_17: chararray
,claim_diag_poa_18: chararray
,claim_diag_poa_19: chararray
,claim_diag_poa_20: chararray
,claim_diag_poa_21: chararray
,claim_diag_poa_22: chararray
,claim_diag_poa_23: chararray
,claim_diag_poa_24: chararray
,claim_diag_poa_25: chararray
,admit_diag_poa: chararray
,ecode_diag_1: chararray
,ecode_poa_1: chararray
,ecode_diag_2: chararray
,ecode_poa_2: chararray
,ecode_diag_3: chararray
,ecode_poa_3: chararray
,rfv_diag_1: chararray
,rfv_poa_1: chararray
,value_code_1: chararray
,value_amount_1: double
,value_code_2: chararray
,value_amount_2: double
,value_code_3: chararray
,value_amount_3: double
,value_code_4: chararray
,value_amount_4: double
,value_code_5: chararray
,value_amount_5: double
,icd_proc_1: chararray
,icd_proc_date_1: chararray
,icd_proc_2: chararray
,icd_proc_date_2: chararray
,icd_proc_3: chararray
,icd_proc_date_3: chararray
,icd_proc_4: chararray
,icd_proc_date_4: chararray
,icd_proc_5: chararray
,icd_proc_date_5: chararray
,icd_proc_6: chararray
,icd_proc_date_6: chararray
,icd_proc_7: chararray
,icd_proc_date_7: chararray
,icd_proc_8: chararray
,icd_proc_date_8: chararray
,icd_proc_9: chararray
,icd_proc_date_9: chararray
,icd_proc_10: chararray
,icd_proc_date_10: chararray
,icd_proc_11: chararray
,icd_proc_date_11: chararray
,icd_proc_12: chararray
,icd_proc_date_12: chararray
,l_void_yn: chararray
,l_npi: chararray
,l_edit_0_allowed_yn: chararray
,l_zero_chg_line_seq: chararray
,l_zero_chg_sched_amount: double
,l_contract_id: chararray
,l_ndc: chararray
,l_er_visit_yn: chararray
,rr_reason1_code: chararray
,rr_reason1_id: chararray
,rr_claim1_id: chararray
,rr_line1_seq: chararray
,rr_rec1_pct: double
,rr_rec1_units: double
,rr_sub_rule1_key: int
,rr_dp1_key: int
,rr_reason2_code: chararray
,rr_reason2_id: chararray
,rr_claim2_id: chararray
,rr_line2_seq: chararray
,rr_rec2_pct: double
,rr_rec2_units: double
,rr_sub_rule2_key: int
,rr_dp2_key: int
,rr_reason3_code: chararray
,rr_reason3_id: chararray
,rr_claim3_id: chararray
,rr_line3_seq: chararray
,rr_rec3_pct: double
,rr_rec3_units: double
,rr_sub_rule3_key: int
,rr_dp3_key: int
,rr_bundling_rec_yn: chararray
,sub_rule_key_last: int
,date: chararray
,iht_saving: double
);


Cpt_Time = LOAD 'cpt_time_2014.txt' Using PigStorage('\t') as (cpt_code: chararray, time_minutes: int, time_calc_method: chararray);


A = FOREACH Clms GENERATE  mod1, mod2, mod3, mod4,
		  tp_payer_short as payer
		, cpt
		, l_paid
		, member_key
		, p_provider_id
		, l_dos_from
		, l_sub_units
		, ssl_spec_code
		, l_claim_type
		, ts_received_date
		, l_npi
		, t_taxgroup_id ;

Filter_AS_NUR  =  Filter A by ts_received_date MATCHES '(2014-0[7-9].*)' AND l_claim_type == 'P' AND  NOT (ssl_spec_code MATCHES '(CMC)|(CRC)|(RHC)|(MIS)|(MUS)|(FAC)')
			AND ssl_spec_code Is Not NULL AND member_key Is Not NULL ;

 B = FIlter Filter_AS_NUR 
				 by 	  ((mod1 Is Not Null AND mod1 !='AS')
			 		OR (mod2 Is Not Null AND mod2 !='AS')
					OR (mod3 Is Not Null AND mod3 !='AS')
 					OR (mod4 Is Not Null AND mod4 !='AS'))              OR 

					
					((mod1 Is Not Null AND NOT (mod1 MATCHES '(GP)|(GO)|(GN)') AND NOT (ssl_spec_code  MATCHES '(PTH)|(OCT)|(SPT)'))

			 		OR (mod2 Is Not Null AND NOT (mod2 MATCHES '(GP)|(GO)|(GN)') AND NOT (ssl_spec_code  MATCHES '(PTH)|(OCT)|(SPT)'))
 					OR (mod3 Is Not Null AND NOT (mod3 MATCHES '(GP)|(GO)|(GN)') AND NOT (ssl_spec_code  MATCHES '(PTH)|(OCT)|(SPT)'))
					OR (mod4 Is Not Null AND NOT (mod4 MATCHES '(GP)|(GO)|(GN)') AND NOT (ssl_spec_code  MATCHES '(PTH)|(OCT)|(SPT)')));




Join1 = Join B by cpt LEFT, Cpt_Time by cpt_code using 'replicated';

req_column = Foreach Join1 generate B::payer as payer
		, B::l_npi as npi
		, B::t_taxgroup_id as taxid
		, B::cpt as cpt
		, B::l_paid as l_paid
		, B::member_key as patient
		, B::p_provider_id as provider_id
		, B::l_dos_from as dos
		, B::l_sub_units as sub_units
		, B::ssl_spec_code as spec_code
		, Cpt_Time::time_minutes as procedure_time
		, Cpt_Time::time_calc_method as timeflag;

Group1 = Group req_column by (payer,provider_id,taxid,npi,dos,spec_code);
Group2 = Foreach Group1 
			{
			a = FOREACH req_column GENERATE patient;
  			b = DISTINCT a;	
			c1 = Filter req_column by timeflag == 'T';
			c2 = Filter req_column by timeflag == 'U';
			c3 = Foreach c2 GENERATE procedure_time, sub_units, (procedure_time*sub_units) as hours_minute;
			--c = Foreach req_column GENERATE ( timeflag == 'T'? procedure_time : procedure_time*sub_units) as hours_minute;
			
generate FLATTEN(group) as (payer,provider_id,taxid,npi,dos,spec_code),COUNT(b.patient)as no_patients, SUM(req_column.l_paid) as sum_paid
		,(double)SUM(c1.procedure_time) as ImputedTime,(double)SUM(c3.hours_minute) as ActualTime;

			};

Report = Foreach Group2 generate payer, provider_id,taxid, npi, dos, spec_code, no_patients, sum_paid,ImputedTime,ActualTime,(ImputedTime + ActualTime) as minute_perday;

Report1 = Foreach Report generate payer, provider_id,taxid, npi, dos, spec_code, no_patients, sum_paid, (ImputedTime/60) as Imputed_Hour, (ActualTime/60) as Actual_Hour
		, (minute_perday/60) as Hours_perday
		, ((minute_perday/60) > 24 ? 1 : 0) as ImpossibleDayFlag
		, ((minute_perday/60) > 14 ? ((minute_perday/60) <= 24 ? 1 : 0) : 0) as UnlikelyDayFlag;

Report2 = Foreach Report1 generate $0..$12,
 (((sum_paid/Hours_perday)*(Hours_perday - 24)) > 0 ? ((sum_paid/Hours_perday)*(Hours_perday - 24)): 0 ) as ExcessPaid_24Hours ;
		

ReportFinal = Filter Report2 by Hours_perday > 9.9;

PROVIDER_NPI = LOAD '/refined/mdm/provider_npi' USING PigStorage('\\u1') AS (npi: int, entity_type_code: int, replacement_npi: int, employer_id_num: chararray, prov_org_nm: chararray, prov_enumeration_date: chararray, last_update_date: chararray, npi_deactivation_reason_code: chararray, npi_deactivation_date: chararray, npi_reactivation_date: chararray, prov_gender_code: chararray, hc_prov_taxonomy_code_1: chararray, prov_lic_num_1: chararray, prov_lic_num_state_code_1: chararray, hc_prov_primary_taxonomy_sw_1: chararray, hc_prov_taxonomy_code_2: chararray, prov_lic_num_2: chararray, prov_lic_num_state_code_2: chararray, hc_prov_primary_taxonomy_sw_2: chararray, other_prov_id_1: chararray, other_prov_id_type_code_1: chararray, other_prov_id_state_1: chararray, other_prov_id_issuer_1: chararray, other_prov_id_2: chararray, other_prov_id_type_code_2: chararray, other_prov_id_state_2: chararray, other_prov_id_issuer_2: chararray, is_sole_proprietor: chararray, is_org_subpart: chararray, parent_org_lbn: chararray, parent_org_tin: chararray, hc_prov_taxonomy_group_1: chararray, hc_prov_taxonomy_group_2: chararray, dos_from: chararray, dos_to: chararray);

Exclude_Insttutional_Provider = Join ReportFinal by (int)npi, PROVIDER_NPI by npi ;
Exclude_Insttutional_Provider1 = Filter Exclude_Insttutional_Provider by PROVIDER_NPI::entity_type_code == 1;

Exclude_Insttutional_Provider2 = Foreach Exclude_Insttutional_Provider1 generate $0..$13;

rmf /user/sjain/Tufts_ImpossibleDay
STORE Exclude_Insttutional_Provider2 into '/user/sjain/Tufts_ImpossibleDay' using PigStorage('|','-schema');

-- hadoop fs -getmerge /user/sjain/Tufts_ImpossibleDay  Tufts_ImpossibleDay.txt


